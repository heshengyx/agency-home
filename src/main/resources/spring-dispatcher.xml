<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
	
	<!-- 搜索 com.sfpay.map.controller包里的 @ontroller注解，并将其部署到容器中 -->
	<context:component-scan base-package="com.house.agency.controller" />
	<!-- 启用基于注解的配置 -->
	<!-- <context:annotation-config /> <mvc:annotation-driven /> -->

	<!-- 
		<bean id="viewResolver"
			class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			<property name="viewClass"
				value="org.springframework.web.servlet.view.JstlView" />
			<property name="prefix" value="/WEB-INF/views/" />
			<property name="suffix" value=".jsp" />
			<property name="order" value="1" />
		</bean>

		<bean id="tilesviewResolver"
			class="org.springframework.web.servlet.view.tiles2.TilesViewResolver">
			<property name="order" value="0" />
		</bean>

		<bean id="tilesConfigurer"
			class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
			<property name="definitions">
				<list>
					<value>/WEB-INF/tiles-definitions.xml</value>
				</list>
			</property>
		</bean> -->

	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
		p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" />

	<!-- 这里设置静态的资源 -->
	<mvc:resources location="/avatars/" mapping="/avatars/**" />
	<mvc:resources location="/images/" mapping="/images/**" />
	<mvc:resources location="/js/" mapping="/js/**" />
	<mvc:resources location="/css/" mapping="/css/**" />
	<mvc:resources location="/fonts/" mapping="/fonts/**" />
	
	<!-- <mvc:interceptors>
				配置Token拦截器，防止用户重复提交数据
				<mvc:interceptor>
						<mvc:mapping path="/**"/>
						<bean class="com.myself.finance.interceptor.TokenInterceptor"/>
				</mvc:interceptor>
		</mvc:interceptors> -->

	<!-- <bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" /> -->
	<!-- <bean
			class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
			<property name="interceptors">  
						<list>  
								<ref bean="localeChangeInterceptor"/>  
						</list>  
				</property>
		</bean> -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
			 <property name="interceptors">
					<list>
							<bean class="com.myself.finance.interceptor.TokenInterceptor"/>
					</list>
			 </property>
		</bean> -->
	
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">     
	</bean>
	<!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>-->
	
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
				<value>text/json;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	<!-- 支持上传文件 -->  
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
	</bean>
    
    <!-- 
	<bean id="kaptchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">  
		<property name="config">  
			<bean class="com.google.code.kaptcha.util.Config">  
				<constructor-arg>  
					<props>  
						<prop key="kaptcha.border">yes</prop>  
						<prop key="kaptcha.border.color">105,179,90</prop>  
						<prop key="kaptcha.textproducer.font.color">blue</prop>  
						<prop key="kaptcha.image.width">100</prop>  
						<prop key="kaptcha.image.height">35</prop>  
						<prop key="kaptcha.textproducer.font.size">33</prop>  
						<prop key="kaptcha.session.key">KAPTCHA-CODE</prop>  
						<prop key="kaptcha.textproducer.char.length">4</prop>  
						<prop key="kaptcha.textproducer.font.names">BKamrnBd</prop>  
					</props>  
				</constructor-arg>  
			</bean>  
		</property>  
	</bean>
	 -->
</beans>
